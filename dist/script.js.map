{"version":3,"sources":["script.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","modalElement","navToggle","document","querySelector","portfolioContainer","menuButton","getElementById","form","submitButton","userInputs","querySelectorAll","userMessage","errorSpanInput","menuHandler","body","classList","toggle","modalHandler","event","preventDefault","modalToggle","target","closest","modal","parentNode","nextElementSibling","closeButton","modalOpen","addEventListener","modalAnimationClose","code","style","animation","add","display","overflowY","modalClose","remove","removeEventListener","submitFormHandler","email","message","console","log","errors","trim","addAlertClass","push","Error","removeAlertClass","clearUserInputs","element","span","visibility","inputs","_step","_iterator"],"mappings":"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","file":"script.js","sourcesContent":["const navToggle = document.querySelector('.nav__toggle');\r\nconst portfolioContainer = document.querySelector('.portfolio__items');\r\nconst menuButton = document.getElementById('menu__button');\r\nconst form = document.querySelector('form');\r\nconst submitButton = form.querySelector('button');\r\nconst userInputs = form.querySelectorAll('input');\r\nconst userMessage = form.querySelector('textarea');\r\nconst errorSpanInput = form.querySelectorAll('span');\r\nlet modalElement;\r\n\r\n// main menu\r\nconst menuHandler = () => {\r\n  document.body.classList.toggle('nav--open');\r\n};\r\n\r\n// portfolio modals\r\nconst modalHandler = (event) => {\r\n  event.preventDefault();\r\n\r\n  const modalToggle = event.target.closest('.portfolio__link'); // will give us the link element of the particular modal\r\n\r\n  if (!modalToggle) return;\r\n\r\n  const modal = modalToggle.parentNode.nextElementSibling; // select figcaption element of the link (parent node), then select next element which is modal div;\r\n\r\n  if (!modal) return;\r\n\r\n  const closeButton = modal.querySelector('button');\r\n\r\n  // set the element to close\r\n  modalElement = modal;\r\n  modalOpen();\r\n  closeButton.addEventListener('click', modalAnimationClose);\r\n  document.addEventListener('keydown', (e) => {\r\n    if (e.code === 'Escape') modalAnimationClose();\r\n  });\r\n};\r\n\r\nconst modalOpen = () => {\r\n  // animation\r\n  modalElement.style.animation = 'modalIn 500ms forwards';\r\n  modalElement.classList.add('modal--is--open');\r\n  navToggle.style.display = 'none';\r\n  document.body.style.overflowY = 'hidden';\r\n};\r\n\r\nconst modalAnimationClose = () => {\r\n  // animation\r\n  modalElement.style.animation = 'modalOut 500ms forwards';\r\n  modalElement.addEventListener('animationend', modalClose);\r\n  navToggle.style.display = 'block';\r\n\r\n  document.body.style.overflowY = 'scroll';\r\n};\r\n\r\nconst modalClose = () => {\r\n  modalElement.classList.remove('modal--is--open');\r\n  modalElement.removeEventListener('animationend', modalClose);\r\n  modalElement = null;\r\n  document.body.style.overflowY = 'scroll';\r\n};\r\n\r\n// form section\r\nconst submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n  const name = userInputs[0].value;\r\n  const email = userInputs[1].value;\r\n  const message = userMessage.value;\r\n  console.log(name, email, message);\r\n\r\n  const errors = [];\r\n\r\n  if (name.trim() === '') {\r\n    addAlertClass(userInputs[0], errorSpanInput[0]);\r\n    errors.push(new Error('invalid name input'));\r\n  } else {\r\n    removeAlertClass(userInputs[0], errorSpanInput[0]);\r\n  }\r\n\r\n  if (email.trim() === '') {\r\n    addAlertClass(userInputs[1], errorSpanInput[1]);\r\n    errors.push(new Error('invalid email input'));\r\n  } else {\r\n    removeAlertClass(userInputs[1], errorSpanInput[1]);\r\n  }\r\n\r\n  if (message.trim() === '') {\r\n    addAlertClass(userMessage, errorSpanInput[2]);\r\n    errors.push(new Error('invalid message input'));\r\n  } else {\r\n    removeAlertClass(userMessage, errorSpanInput[2]);\r\n  }\r\n\r\n  if (errors.length > 0) {\r\n    throw errors;\r\n  } else {\r\n    // add submit form then clear inputs\r\n    clearUserInputs(userInputs, userMessage);\r\n  }\r\n};\r\n\r\nconst addAlertClass = (element, span) => {\r\n  console.log(element, span);\r\n  element.classList.add('alert');\r\n  span.style.visibility = 'visible';\r\n};\r\n\r\nconst removeAlertClass = (element, span) => {\r\n  element.classList.remove('alert');\r\n  span.style.visibility = 'hidden';\r\n};\r\n\r\nconst clearUserInputs = (inputs, message) => {\r\n  for (let input of inputs) {\r\n    input.value = '';\r\n  }\r\n  message.value = '';\r\n};\r\n\r\nnavToggle.addEventListener('click', menuHandler);\r\nportfolioContainer.addEventListener('click', modalHandler);\r\nsubmitButton.addEventListener('click', submitFormHandler);\r\n"]}